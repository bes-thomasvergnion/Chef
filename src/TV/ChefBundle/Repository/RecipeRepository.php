<?php

namespace TV\ChefBundle\Repository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * RecipeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RecipeRepository extends \Doctrine\ORM\EntityRepository
{
    public function getRecipes($page, $nbPerPage)
    {
        $query = $this->createQueryBuilder('a')
            ->orderBy('a.id', 'DESC')
            ->getQuery()
        ;
        
        $query
            ->setFirstResult(($page-1) * $nbPerPage)
            ->setMaxResults($nbPerPage)
          ;
        return new Paginator($query, true);
    }
    
    public function getRecipesWithFilters(\TV\ChefBundle\Entity\Search $search, $page, $nbPerPage)
    {            
        $query = $this->createQueryBuilder('g');
        $andX = $query->expr()->andX();
        if(null !== $search->getType()){
            $andX->add('g.type = :type');
            $query->setParameter('type', $search->getType());
        }
        if(null !== $search->getCategory()){
            $andX->add('g.category = :category');
            $query->setParameter('category', $search->getCategory());
        }
        if(null !== $search->getLocality()){
            $andX->add('g.locality = :locality');
            $query->setParameter('locality', $search->getLocality());
        }
        
        if(!empty($search->getType()) || !empty($search->getCategory()) || !empty($search->getLocality()) ){
            $query->where($andX);
        }
        $query->orderBy('g.id', 'DESC');
        
        $query
            ->setFirstResult(($page-1) * $nbPerPage)
            ->setMaxResults($nbPerPage)
          ;
        return new Paginator($query, true);
    }
}
