<?php

namespace TV\UserBundle\Repository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    public function getActivedUsers($page, $nbPerPage)
    {
        $query = $this->createQueryBuilder('a')
            ->where('a.enabled = true')
            ->orderBy('a.id', 'DESC')
            ->getQuery()
        ;
        $query
            ->setFirstResult(($page-1) * $nbPerPage)
            ->setMaxResults($nbPerPage)
          ;
        return new Paginator($query, true);
    }
    
    public function getUsers($page, $nbPerPage)
    {
        $query = $this->createQueryBuilder('a')
            ->orderBy('a.id', 'DESC')
            ->getQuery()
        ;
        $query
            ->setFirstResult(($page-1) * $nbPerPage)
            ->setMaxResults($nbPerPage)
          ;
        return new Paginator($query, true);
    }
    
    public function getNbrNotes($user)
    {
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.notes', 'c')
            ->addSelect('COUNT(c)')
            ->where('c.user = :user')
            ->setParameter('user', $user)
            ->getQuery()
        ;

        return $query->getSingleResult();
    }
    
    public function getFolloweds($user)
    {
        $query = $this->createQueryBuilder('a')
            ->leftJoin('a.followeds', 'c')
            ->addSelect('c')
            ->where('c.follower = :user')
            ->setParameter('user', $user)
            ->getQuery()
        ;
        
        return $query->getResult();
    }
}
